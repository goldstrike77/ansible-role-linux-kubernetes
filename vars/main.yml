---
kube_module_dependent:
  - 'overlay'
  - 'br_netfilter'

kube_kernel_parameters:
  - { variable: 'net.bridge.bridge-nf-call-iptables',  value: '1' }
  - { variable: 'net.bridge.bridge-nf-call-ip6tables', value: '1', create: '{{ ansible_all_ipv6_addresses is not none }}' }
  - { variable: 'net.core.somaxconn',                  value: '65535' }
  - { variable: 'net.ipv4.ip_local_port_range',        value: '1025 65535' }
  - { variable: 'net.ipv4.neigh.default.gc_thresh3',   value: '8192' }
  - { variable: 'net.ipv4.neigh.default.gc_thresh2',   value: '4096' }
  - { variable: 'net.ipv4.neigh.default.gc_thresh1',   value: '2048' }

kube_registry_mirrors: # Mirrors of docker image registry 
  quay: 'quay.mirrors.ustc.edu.cn'
#  quay: 'quay-mirror.qiniu.com'
#  quay: 'quay.azk8s.cn'
  google: 'registry.aliyuncs.com'
#  google: 'gcr.azk8s.cn'
  dockerhub: 'hub-mirror.c.163.com'
#  dockerhub: 'dockerhub.azk8s.cn'
#  dockerhub: 'docker.mirrors.ustc.edu.cn'

kube_pypi_url: 'https://mirrors.aliyun.com/pypi/simple/'

kube_python_dependent_packages:
  - 'pip'
  - 'docker'

kube_extra_args:
  - 'runtime-cgroups=/systemd/system.slice'
  - 'kubelet-cgroups=/systemd/system.slice'

kube_template_clean: true

kube_servers: "\
  {% set _kube_servers = [] %}\
  {% for host in groups[group_names[-1]] %}\
    {% set _kube_node_role = hostvars[host]['kube_node_role'] | default('node', true) %}\
    {% if ( _kube_node_role == 'master') %}\
      {% if _kube_servers.append(hostvars[host]['ansible_host']) %}{% endif %}\
    {% endif %}\
  {% endfor %}\
  {{ _kube_servers }}"
