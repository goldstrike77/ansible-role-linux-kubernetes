---
- name: Gathering service facts.
  service_facts:
  register: services_state

- name: Kubernetes firewalld operation.
  block:
    - name: Allow Kubernetes control plane traffic.
      firewalld:
        port: '{{ item.value }}/tcp'
        zone: 'public'
        permanent: 'yes'
        state: 'enabled'
        immediate: 'true'
      loop: '{{ kube_port_tcp_arg | dict2items }}'
    - name: Allow Kubernetes CNI tcp traffic.
      firewalld:
        port: '{{ item.value }}/tcp'
        zone: 'public'
        permanent: 'yes'
        state: 'enabled'
        immediate: 'true'
      loop: '{{ kube_cni_tcp_arg | dict2items }}'
    - name: Allow Kubernetes CNI udp traffic.
      firewalld:
        port: '{{ item.value }}/udp'
        zone: 'public'
        permanent: 'yes'
        state: 'enabled'
        immediate: 'true'
      loop: '{{ kube_cni_udp_arg | dict2items }}'
    - name: Allow flannel virtual networking traffic.
      firewalld:
        zone: 'trusted'
        interface: '{{ item }}'
        permanent: 'yes'
        state: 'enabled'
        immediate: 'true'
      loop: '{{ kube_trusted_network }}'
    - name: Allow CIDR networking traffic.
      firewalld:
        zone: 'trusted'
        source: '{{ item }}'
        permanent: 'yes'
        state: 'enabled'
        immediate: 'true'
      loop:
        - '{{ kube_pod_cidr | default("10.244.0.0/16") }}'
        - '{{ kube_srv_cidr | default("10.96.0.0/12") }}'
    - name: Enable IP masquerading.
      firewalld:
        masquerade: 'yes'
        state: 'enabled'
        permanent: 'yes'
        zone: 'public'
        immediate: 'true'
  when:
    - services_state.ansible_facts.services["firewalld.service"] is defined
    - services_state.ansible_facts.services["firewalld.service"].state == 'running'
